#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

Plan for December/January

Based the presentations at ADASS, in particular a presentation by Petar Zecevic on "AXS (Astronomy eXtensions for Spark)"[a] and Beatriz Martinez on "Data-driven Space Science at ESA Science Data Centre"[b], and having talked with Mario about what they are working on for ZTF and LSST data at Washington [c][d].

I need to look at using Apache Spark[1], Apache Spark-SQL[2] and SparkStreaming[3] to access data in Cassandra[4], Avro[5] and Parquet[6] files and Kafka[7] streams, using Apache Yarn[8] or Mesos[9] to distribute the processing across multiple machines.

[a] http://adass2018.astro.umd.edu/abstracts/O10.2.html
[b] http://adass2018.astro.umd.edu/abstracts/O10.4.html
[c] http://adass2018.astro.umd.edu/abstracts/O8.2.html
[d] https://zenodo.org/record/1453862

[1] https://spark.apache.org/
[2] https://spark.apache.org/sql/
[3] https://spark.apache.org/streaming/
[4] http://cassandra.apache.org/
[5] https://avro.apache.org/
[6] https://parquet.apache.org/
[7] http://kafka.apache.org/
[8] https://hortonworks.com/apache/yarn/
[9] http://mesos.apache.org/


Additional info:
https://www.groundai.com/project/analyzing-astronomical-data-with-apache-spark/
https://indico.cern.ch/event/735616/contributions/3033957/attachments/1687000/2713145/spark_at_lal.pdf
https://arxiv.org/abs/1807.03078
https://arxiv.org/pdf/1807.03078.pdf
https://zenodo.org/record/1453862


https://opencredo.com/data-analytics-using-cassandra-and-spark/
https://opencredo.com/how-not-to-use-cassandra-like-an-rdbms-and-what-will-happen-if-you-do/

    "Alternatively, a stream-processing approach may be the way to go when you need to generate complex
    reports which consume large amounts of captured data. Stream the records you have captured in Cassandra
    into an Apache Spark cluster, and use Spark SQL to execute complex queries using filters, joins and
    aggregations. This approach, which I call “write first, reason later”, is especially suited to
    event-driven systems where capture of event information can be decoupled from decision-making about
    how to react to events in the aggregate."


https://www.datastax.com/dev/blog/2012-in-review-performance

https://cassandra.apache.org/doc/latest/operating/hardware.html


    Spark-SQL
    Yarn
    Parquet
    HDFS

    Databases at CERN
    Diving into Spark and Parquet Workloads
    https://db-blog.web.cern.ch/blog/luca-canali/2017-06-diving-spark-and-parquet-workloads-example

    Spark SQL Performance Tests
    https://github.com/databricks/spark-sql-perf

    Apache Hadoop Yarn overview
    https://hortonworks.com/blog/apache-hadoop-yarn-background-and-an-overview/

    Parquet
    https://parquet.apache.org/

    Spark-SQL
    https://spark.apache.org/sql/

    Spark-SQL getting started
    https://spark.apache.org/docs/latest/sql-getting-started.html

    Serializing to Parquet from Kafka with Exactly Once Guarantee
    https://eng.verizondigitalmedia.com/2017/04/28/Kafka-to-Hdfs-ParquetSerializer/

    Spark structured streaming
    https://stackoverflow.com/a/45831228

    Spark structured streaming
    https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html

    Spark structured streaming Kafka integration
    https://spark.apache.org/docs/latest/structured-streaming-kafka-integration.html


    Kafka Cassandra Connect
    https://www.confluent.io/blog/kafka-connect-cassandra-sink-the-perfect-match/

