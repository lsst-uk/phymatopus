#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    #
    # Open stack system is snafu !?
    #


2018-11-21

    SSH acccess to raminiara-kafka-2 failed
    Ncat: Connection timed out.

    Tried rebooting the node - fails.
    Tried HARD rebooting the node - fails.

2018-11-22

    Tried HARD rebooting the node - fails.

    Node becomes inaccessible via SSH or OpenStack.

        Cannot 'detach_volume' instance 6f971e48-f760-43bf-ad98-c38a7b90c321 while it is in task_state rebooting_hard (HTTP 409) (Request-ID: req-6e95a70f-4aef-4418-90b7-2610023eb7e3)
        Cannot 'pause'         instance 6f971e48-f760-43bf-ad98-c38a7b90c321 while it is in task_state rebooting_hard (HTTP 409) (Request-ID: req-3663958b-2da9-47c0-bc2f-39c7b43be31e)
        Cannot 'stop'          instance 6f971e48-f760-43bf-ad98-c38a7b90c321 while it is in task_state rebooting_hard (HTTP 409) (Request-ID: req-31df69b2-ca75-4bec-ae4f-26f28db76071)
        Cannot 'rescue'        instance 6f971e48-f760-43bf-ad98-c38a7b90c321 while it is in task_state rebooting_hard (HTTP 409) (Request-ID: req-b957e645-3e84-47a3-bfa9-39771b6cb057)

        Policy doesn't allow os_compute_api:os-admin-actions:reset_state to be performed. (HTTP 403) (Request-ID: req-652f219c-07ad-4aa3-b3ec-be3a8284863d)

2018-11-22

    Creating new nodes - SSH access fails 50% of the time :-(

    Unable to create new volumes - quota limit reached.

        VolumeSizeExceedsAvailableQuota: Requested volume or snapshot exceeds allowed gigabytes quota. Requested 512G, quota is 6148G and 6144G has been consumed. (HTTP 413) (Request-ID: req-cee5a1a7-1727-4b59-91f4-f39376ca8d9c)

2018-11-22

    Old node becomes available again !




        # -----------------------------------------------------
        # Get the OpenStack status of our Kafka nodes.
        #[root@openstacker]

            for vmident in ${kfidents[@]}
            do
                openstack \
                    server show \
                     --format json \
                    "${vmident:?}" \
                    | jq '{"addresses", "status", "OS-EXT-STS:vm_state", "OS-EXT-STS:power_state"}'
            done

                {
                "addresses": "vm-network-UoE-internal=192.168.1.5, 172.16.49.217",
                "status": "ACTIVE",
                "OS-EXT-STS:vm_state": "active",
                "OS-EXT-STS:power_state": "Running"
                }
                {
                "addresses": "vm-network-UoE-internal=192.168.1.8, 172.16.49.214",
                "status": "ACTIVE",
                "OS-EXT-STS:vm_state": "active",
                "OS-EXT-STS:power_state": "Running"
                }
                {
                "addresses": "vm-network-UoE-internal=192.168.1.15, 172.16.49.12",
                "status": "ACTIVE",
                "OS-EXT-STS:vm_state": "active",
                "OS-EXT-STS:power_state": "Running"
                }
                {
                "addresses": "vm-network-UoE-internal=192.168.1.10, 172.16.49.208",
                "status": "ACTIVE",
                "OS-EXT-STS:vm_state": "active",
                "OS-EXT-STS:power_state": "Running"
                }

        # -----------------------------------------------------
        # Login to each of our Kafka nodes.
        #[root@openstacker]

            for vmident in ${kfidents[@]}
            do
                getvminfo "${vmident:?}"
                vmipv4=$(geteleanor192)
                echo "----"
                echo "[${vmident}][${vmipv4}]"
                echo "
                    echo \"[\$(hostname -f)]\"
                    " \
                | ssh \
                    ${sshopts[*]} \
                    -o ProxyCommand="${sshproxy:?}" \
                    ${sshuser:?}@${vmipv4:?}
            done

                ----
                [bb409e47-cf2c-4e64-aea6-e893e5d05100][192.168.1.5]
                [raminiara-kafka-4.novalocal]
                ----
                [aa73a427-2e9f-413d-a37b-3eaf35799f00][192.168.1.8]
                [raminiara-kafka-3.novalocal]
                ----
                [6f971e48-f760-43bf-ad98-c38a7b90c321][192.168.1.15]
                [raminiara-kafka-2.novalocal]
                ----
                [0824e436-6213-4893-8a67-40d152e7402c][192.168.1.10]
                [raminiara-kafka-1.novalocal]


        # -----------------------------------------------------
        # Check the disc space on each of our Kafka nodes.
        #[root@openstacker]

            innerpath=/var/local/inner/kafka
            outerpath=/var/local/outer/kafka

            for vmipv4 in $(cat /etc/phymatopus/ipv4/kfip192.txt)
                do
                    echo "
                        echo \"\"
                        echo \"[${vmipv4:?}][$(date)]\"
                        echo \"\"
                        df -h /
                        echo \"---- ----\"
                        df -h \"${outerpath:?}/data-00\"
                        echo "---- ----"
                        df -h \"${outerpath:?}/data-01\"
                        echo "---- ----"
                        df -h \"${outerpath:?}/data-02\"
                        " \
                    | ssh \
                        ${sshopts[*]} \
                        -o ProxyCommand="${sshproxy:?}" \
                        ${sshuser:?}@${vmipv4:?}
                done


                [192.168.1.5][Thu Nov 22 16:12:47 UTC 2018]

                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vda3        39G  4.9G   33G  14% /
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdb        512G  478G   33G  94% /var/local/outer/kafka/data-00
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdc        512G  478G   33G  94% /var/local/outer/kafka/data-01
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdd        512G  220G  291G  44% /var/local/outer/kafka/data-02

                [192.168.1.8][Thu Nov 22 16:12:48 UTC 2018]

                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vda3        39G  3.3G   34G   9% /
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdb        512G  492G   20G  97% /var/local/outer/kafka/data-00
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdc        512G  492G   20G  97% /var/local/outer/kafka/data-01
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdd        512G  194G  318G  38% /var/local/outer/kafka/data-02

                [192.168.1.15][Thu Nov 22 16:12:49 UTC 2018]

                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vda3        39G  2.5G   35G   7% /
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdb        512G  492G   20G  97% /var/local/outer/kafka/data-00
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdc        512G  492G   20G  97% /var/local/outer/kafka/data-01
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdd        512G  110G  402G  22% /var/local/outer/kafka/data-02

                [192.168.1.10][Thu Nov 22 16:12:50 UTC 2018]

                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vda3        39G  2.8G   35G   8% /
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdb        512G  491G   20G  97% /var/local/outer/kafka/data-00
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdc        512G  492G   20G  97% /var/local/outer/kafka/data-01
                ---- ----
                Filesystem      Size  Used Avail Use% Mounted on
                /dev/vdd        512G  194G  318G  38% /var/local/outer/kafka/data-02

        # -----------------------------------------------------
        # List the containers runing on our Kafka nodes.
        #[root@openstacker]

            for vmipv4 in $(cat "/etc/phymatopus/ipv4/kfip192.txt")
                do
                     echo "
                         echo \"----\"
                         echo \"[\$(hostname -f)]\"
                         echo \"----\"
                         echo \"\"
                         docker ps -a | sed 's/^\(.*\)/\t\1/'
                         echo \"\"
                         " \
                     | ssh \
                         ${sshopts[*]} \
                         -o ProxyCommand="${sshproxy:?}" \
                         ${sshuser:?}@${vmipv4:?}
                done

                ----
                [raminiara-kafka-4.novalocal]
                ----

	                CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS                    NAMES
	                414ce5540bd3        confluentinc/cp-kafka:4.1.1   "/etc/confluent/dock…"   11 days ago         Up 11 days          0.0.0.0:9092->9092/tcp   stevedore_emily_1

                ----
                [raminiara-kafka-3.novalocal]
                ----

	                CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS                    NAMES
	                51d987c00793        confluentinc/cp-kafka:4.1.1   "/etc/confluent/dock…"   10 days ago         Up 10 days          0.0.0.0:9092->9092/tcp   stevedore_emily_1

                ----
                [raminiara-kafka-2.novalocal]
                ----

	                CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS                     PORTS                    NAMES
	                5fd679524c0b        confluentinc/cp-kafka:4.1.1   "/etc/confluent/dock…"   10 days ago         Exited (255) 3 hours ago   0.0.0.0:9092->9092/tcp   stevedore_emily_1

                ----
                [raminiara-kafka-1.novalocal]
                ----

	                CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS                    NAMES
	                0b5a59a64dfc        confluentinc/cp-kafka:4.1.1   "/etc/confluent/dock…"   9 days ago          Up 25 hours         0.0.0.0:9092->9092/tcp   stevedore_emily_1


        # -----------------------------------------------------
        # Check internal access.
        #[root@openstacker]

            getvminfo "${kfidents[2]}"

            echo "
                hostname
                " \
            | ssh \
                ${sshopts[*]} \
                -o ProxyCommand="${sshproxy:?}" \
                ${sshuser:?}@$(geteleanor192)

            >   raminiara-kafka-2.novalocal

        # -----------------------------------------------------
        # Check external access.
        #[root@openstacker]

            getvminfo "${kfidents[2]}"

            echo "
                hostname
                " \
            | ssh \
                ${sshopts[*]} \
                -o ProxyCommand="${sshproxy:?}" \
                ${sshuser:?}@$(geteleanor172)

            >   raminiara-kafka-2.novalocal

        # -----------------------------------------------------
        # Login to the node and restart Kafka.
        #[root@openstacker]

            getvminfo "${kfidents[2]}"

            ssh \
                ${sshopts[*]} \
                -o ProxyCommand="${sshproxy:?}" \
                ${sshuser:?}@$(geteleanor192)


            # -----------------------------------------------------
            # Explore the VM ...
            #[Stevedore@raminiara-kafka-2]

                date

                >   Thu Nov 22 16:19:39 GMT 2018

                docker ps -a

                >   CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS                     PORTS                    NAMES
                >   5fd679524c0b        confluentinc/cp-kafka:4.1.1   "/etc/confluent/dock…"   10 days ago         Exited (255) 3 hours ago   0.0.0.0:9092->9092/tcp   stevedore_emily_1

                cat "${HOME}/kafka.yml" | sed 's/^\(.*\)/>\t\1/'

                >
                >	version: "3.2"
                >
                >	networks:
                >	    kafka:
                >
                >	services:
                >
                >	    emily:
                >	        image:
                >	            confluentinc/cp-kafka:4.1.1
                >	        ports:
                >	            - "9092:9092"
                >	        environment:
                >	            - KAFKA_LOG_DIRS=${KAFKA_LOG_DIRS}
                >	            - KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
                >	            - KAFKA_BROKER_RACK=${KAFKA_BROKER_RACK}
                >	            - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT}
                >	            - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
                >	            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${externalip}:9092
                >	            - KAFKA_NUM_PARTITIONS=16
                >	            - KAFKA_DEFAULT_REPLICATION_FACTOR=3
                >	            - KAFKA_LOG_RETENTION_MS=-1
                >	            - KAFKA_LOG_RETENTION_BYTES=-1
                >	            - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
                >	            - KAFKA_MESSAGE_MAX_BYTES=10485760
                >	        volumes:
                >	            - type:   "bind"
                >	              source: "${outerpath}/data-00"
                >	              target: "${innerpath}/data-00"
                >	            - type:   "bind"
                >	              source: "${outerpath}/data-01"
                >	              target: "${innerpath}/data-01"
                >	            - type:   "bind"
                >	              source: "${outerpath}/data-02"
                >	              target: "${innerpath}/data-02"
                >	        networks:
                >	            - kafka
                >

                cat "${HOME}/kafka.env" | sed 's/^\(.*\)/>\t\1/'

                >	KAFKA_LOG_DIRS=/var/local/inner/kafka/data-00,/var/local/inner/kafka/data-01,/var/local/inner/kafka/data-02
                >	KAFKA_BROKER_ID=1
                >	KAFKA_BROKER_RACK=1
                >	KAFKA_ZOOKEEPER_CONNECT=192.168.1.11:2181/kafka,192.168.1.16:2181/kafka,192.168.1.14:2181/kafka
                >
                >	internalip=192.168.1.15
                >	externalip=172.16.49.12
                >	innerpath=/var/local/inner/kafka
                >	outerpath=/var/local/outer/kafka


            # -----------------------------------------------------
            # Stop/start Kafka ...
            #[Stevedore@raminiara-kafka-2]

                docker-compose \
                    --file "${HOME}/kafka.yml" \
                    down

                >   Removing stevedore_emily_1 ... done
                >   Removing network stevedore_kafka

                docker-compose \
                    --file "${HOME}/kafka.yml" \
                    up -d

                >   Creating network "stevedore_kafka" with the default driver
                >   Creating stevedore_emily_1 ...
                >   Creating stevedore_emily_1 ... done

                docker logs \
                   --follow \
                   --tail 100 \
                    stevedore_emily_1

                >   [2018-11-22 16:30:01,084] INFO [ProducerStateManager partition=ztf_20181113_programid1-14] Writing producer snapshot at offset 107952 (kafka.log.ProducerStateManager)
                >   [2018-11-22 16:30:01,086] INFO [Log partition=ztf_20181113_programid1-14, dir=/var/local/inner/kafka/data-02] Recovering unflushed segment 95883 (kafka.log.Log)
                >   [2018-11-22 16:30:01,087] INFO [ProducerStateManager partition=ztf_20181113_programid1-14] Loading producer state from snapshot file '..../00000000000000095883.snapshot' (kafka.log.ProducerStateManager)
                >   [2018-11-22 16:30:02,393] INFO [ProducerStateManager partition=ztf_20181113_programid1-14] Writing producer snapshot at offset 107952 (kafka.log.ProducerStateManager)
                >   [2018-11-22 16:30:02,396] INFO [Log partition=ztf_20181113_programid1-14, dir=/var/local/inner/kafka/data-02] Loading producer state from offset 107952 with message format version 2 (kafka.log.Log)
                >   [2018-11-22 16:30:02,398] INFO [ProducerStateManager partition=ztf_20181113_programid1-14] Loading producer state from snapshot file '..../00000000000000107952.snapshot' (kafka.log.ProducerStateManager)
                >   [2018-11-22 16:30:02,401] INFO [Log partition=ztf_20181113_programid1-14, dir=/var/local/inner/kafka/data-02] Completed load of log with 7 segments, log start offset 0 and log end offset 107952 in 6770 ms
                >   [2018-11-22 16:30:03,018] WARN [Log partition=ztf_20181113_programid1-11, dir=/var/local/inner/kafka/data-02] Found a corrupted index file corresponding to log file /var/local/inner/kafka/data-02/
                >   [2018-11-22 16:30:03,018] INFO [ProducerStateManager partition=ztf_20181113_programid1-11] Loading producer state from snapshot file '..../00000000000000095867.snapshot' (kafka.log.ProducerStateManager)
                >   [2018-11-22 16:30:03,148] INFO [ProducerStateManager partition=ztf_20180619_programid1-4] Writing producer snapshot at offset 11488 (kafka.log.ProducerStateManager)
                >   [2018-11-22 16:30:03,149] INFO [Log partition=ztf_20180619_programid1-4, dir=/var/local/inner/kafka/data-01] Recovering unflushed segment 0 (kafka.log.Log)
                >   [2018-11-22 16:30:04,326] INFO [ProducerStateManager partition=ztf_20180619_programid1-4] Writing producer snapshot at offset 11488 (kafka.log.ProducerStateManager)
                >   [2018-11-22 16:30:04,329] INFO [Log partition=ztf_20180619_programid1-4, dir=/var/local/inner/kafka/data-01] Loading producer state from offset 11488 with message format version 2 (kafka.log.Log)
                >   [2018-11-22 16:30:04,330] INFO [ProducerStateManager partition=ztf_20180619_programid1-4] Loading producer state from snapshot file '..../00000000000000011488.snapshot' (kafka.log.ProducerStateManager)



