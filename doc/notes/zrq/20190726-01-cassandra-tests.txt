#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2019, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    Refactor packages

        uk.ac.roe.wfau.phymatopus.kafka;
        uk.ac.roe.wfau.phymatopus.kafka.alert;
        uk.ac.roe.wfau.phymatopus.kafka.tools;

        uk.ac.roe.wfau.phymatopus.cassandra;
        uk.ac.roe.wfau.phymatopus.cassandra.alert;

    Refactor class names

        BaseAlert
            {
            // Renamed ZtfAlert
            AlertCandidate candidate();
            Iterable<PrevCandidate> history();
            }

        BaseCandidate
            {
            // Renamed ZtfCandidate
            }

        PrevCandidate  extends BaseCandidate
            {
            // Nothing to add
            }

        AlertCandidate extends BaseCandidate
            {
            // Renamed ZtfAlertCandidate
            }


        ZtfAlertWrapper implements BaseAlert
            {
            }

        ZtfPrevCandidateWrapper  implements PrevCandidate
            {
            // Renamed ZtfCandidateWrapper
            }

        ZtfAlertCandidateWrapper implements AlertCandidate
            {
            // No change
            }


        LsstAlertWrapper implements BaseAlert
            {
            // No change
            }

        LsstBaseCandidateWrapper implements BaseCandidate
            {
            // Renamed LsstCandidateWrapper
            }

        LsstAlertCandidateWrapper extends LsstBaseCandidateWrapper implements AlertCandidate
            {
            // No change
            }

        LsstPrevCandidateWrapper extends LsstBaseCandidateWrapper implements PrevCandidate
            {
            // Nothing to add
            }


    -----------------

    Run tests using limt rather than timeout.
    Stop at 250,000 alerts.

    Add a mock data source ..

    Compare [read and discard] with [read and insert] to get Cassandra insert cost.
    Compare [read and insert]  with [replicate = 1,2,3] to get Cassandra replicate cost.

    Compare Cassandrda [insert] with HSQLDB [insert]
    Compare Cassandrda [insert] with Mariadb [insert]





