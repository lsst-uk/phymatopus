#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2017, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


Develop experimental prototypes for a micro-service based architecture
to implement an event processing, annotating and filtering system
for LSST and ZTF events.

The system architecture should be based on a network of micro-services
designed to be deployed on an industry standard Infrastructure
as a service (IaaS) cloud compute platform.

The system architecture should be able to dynamically change the shape
and size (type and number) of services in the the event processing
chain in response to changes in the system load.

The system architecture should enable users to dynamically add and remove
components in the event processing chain to control the way that events
are filtered.

All of the components in the system should provide a standard webservice
interface that implements a common control API for all of the different
components.

----

The design of the system builds on our experience of developing
the Firethorn service for query handling, in combination with the
OGSA-DAI service for executing database queries and processing the
results.

The design of the system builds on our experience of using Docker
containers and KVM virtual machines for developing and deplying the
Firethorn and OGSA-DAI webservices in a DevOps environment.

----


  




 















