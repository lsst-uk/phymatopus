#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    #
    # Deploy Kafka on the OpenStack nodes.
    #

    #
    # Start with an empty container and node identifiers.
    # 20180613-01-openstack-deploy.txt
    #
    # Add external data volumes to each node.
    # 20180615-02-kafka-volume.txt

    # -----------------------------------------------------
    # Get the internal (172*) address for our controller node.
    #[root@openstacker]

        getvminfo "${controller:?}"

        control=$(geteleanor172)
        echo "Control [${control}]"

            172.16.49.46

    # -----------------------------------------------------
    # Test login to our control node.
    #[root@openstacker]

        sshuser=Stevedore

        sshopts=(
            '-q'
            '-A'
            '-o CheckHostIP=no'
            '-o UserKnownHostsFile=/dev/null'
            '-o StrictHostKeyChecking=no'
            )
        echo "${sshopts[*]}"

        ssh ${sshopts[*]} "${sshuser:?}@${control:?}" '
            hostname
            '

    # -----------------------------------------------------
    # Setup the ssh proxy command.
    #[root@openstacker]

        sshproxy="ssh ${sshopts[*]} ${sshuser}@${control} nc %h %p"
        echo "sshproxy [${sshproxy}]"

    # -----------------------------------------------------
    # Internal login to each node.
    #[root@openstacker]

        for vmident in ${kfidents[@]}
        do

            echo "---- ---- ---- ----"
            getvminfo "${vmident:?}"
            echo "Name    [$(getvmname)]"
            echo "Ident   [${vmident}]"

            internalip=$(geteleanor192)
            echo "Address [${internalip}]"

            echo "
                hostname
                " \
                | ssh \
                    ${sshopts[*]} \
                    -o ProxyCommand="${sshproxy}" \
                    ${sshuser:?}@${internalip:?}

        done

    # -----------------------------------------------------
    # External login to each node.
    #[root@openstacker]

        for vmident in ${kfidents[@]}
        do

            echo "---- ---- ---- ----"
            getvminfo "${vmident:?}"
            echo "Name    [$(getvmname)]"
            echo "Ident   [${vmident}]"

            externalip=$(geteleanor172)
            echo "Address [${externalip}]"

            echo "
                hostname
                " \
                | ssh \
                    ${sshopts[*]} \
                    ${sshuser:?}@${externalip:?}

        done



    # -----------------------------------------------------
    # Build a list of Zookeeper addresses.
    #[root@openstacker]

        delim=''
        port='2181'
        path='kafka'
        zkconnect=''

        for vmident in ${zkidents[@]}
        do

            echo "---- ---- ---- ----"
            getvminfo "${vmident:?}"
            echo "Ident  [${vmident}]"
            echo "Name   [$(getvmname)]"

            server=$(geteleanor192)
            echo "Server [${server}]"

            zkconnect="${zkconnect}${delim}${server}:${port}/${path}"

            delim=','

        done

        echo "Zookeepers [${zkconnect}]"

    # -----------------------------------------------------
    # Build a list of data volumes.
    #[root@openstacker]

        innerpath=/var/local/inner/kafka
        outerpath=/var/local/outer/kafka

        volumes=(
            data-00
            data-01
            )

        delim=''
        logdirs=''
        for name in ${volumes[@]}
        do
            logdirs=${logdirs}${delim}${innerpath}/${name}
            delim=','
        done

        echo "Logdirs [${logdirs}]"

    # -----------------------------------------------------
    # Create our deploy script.
    #[root@openstacker]

cat > /tmp/kafka-init.sh << 'EOSH'

    cat > kafka.yml << 'EOYL'

version: "3.2"

networks:
    kafka:

services:

    emily:
        image:
            confluentinc/cp-kafka:4.1.1
        ports:
            - "9092:9092"
        environment:
            - KAFKA_LOG_DIRS=${KAFKA_LOG_DIRS}
            - KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
            - KAFKA_BROKER_RACK=${KAFKA_BROKER_RACK}
            - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT}
            - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${externalip}:9092
            - KAFKA_NUM_PARTITIONS=16
            - KAFKA_DEFAULT_REPLICATION_FACTOR=3
            - KAFKA_LOG_RETENTION_MS=-1
            - KAFKA_LOG_RETENTION_BYTES=-1
            - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
            - KAFKA_MESSAGE_MAX_BYTES=10485760
        volumes:
            - type:   "bind"
              source: "${outerpath}/data-00"
              target: "${innerpath}/data-00"
            - type:   "bind"
              source: "${outerpath}/data-01"
              target: "${innerpath}/data-01"
        networks:
            - kafka

EOYL

    echo "---- ----"

    docker-compose \
        --file kafka.yml \
        up -d

    echo "---- ----"

EOSH

    # -----------------------------------------------------
    # Login and run our init script on each node.
    #[root@openstacker]

        for i in ${!kfidents[@]}
        do
            echo "---- ---- ---- ----"
            vmident=${kfidents[$i]}
            getvminfo "${vmident:?}"
            echo "Index [${i}]"
            echo "Ident [${vmident}]"
            echo "Name  [$(getvmname)]"

            internalip=$(geteleanor192)
            echo "Internal [${internalip}]"

            externalip=$(geteleanor172)
            echo "External [${externalip}]"

            echo "
                cat > kafka.env << EOF
KAFKA_LOG_DIRS=${logdirs:?}
KAFKA_BROKER_ID=$(($i+1))
KAFKA_BROKER_RACK=$(($i+1))
KAFKA_ZOOKEEPER_CONNECT=${zkconnect:?}

internalip=${internalip}
externalip=${externalip}
innerpath=${innerpath:?}
outerpath=${outerpath:?}
EOF
                ln -sf kafka.env .env
                " \
                | cat - /tmp/kafka-init.sh \
                | ssh \
                    ${sshopts[*]} \
                    -o ProxyCommand="${sshproxy}" \
                    ${sshuser:?}@${internalip:?}
        done


# -----------------------------------------------------
# Login and tail the logs.
#[root@openstacker]

    ssh trop03
        ssh Etalema
            ssh -A 172.16.49.46
                ssh -A 192.168.1.9
                ssh -A 192.168.1.22
                ssh -A 192.168.1.23
                ssh -A 192.168.1.10

                    docker logs -f stevedore_emily_1

