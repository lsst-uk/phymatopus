#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2019, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#



    Spark Cassandra connector
    https://github.com/datastax/spark-cassandra-connector


    Data Analytics using Cassandra and Spark
    https://opencredo.com/blogs/data-analytics-using-cassandra-and-spark/

    Installing Cassandra
    http://cassandra.apache.org/doc/latest/getting_started/installing.html#installation-from-binary-tarball-files

    Docker 'official' image
    https://github.com/docker-library/cassandra
    https://docs.docker.com/docker-hub/official_images/
    https://hub.docker.com/_/cassandra/


    Docker multi-host networking overlays
    https://www.singlestoneconsulting.com/-/media/files/docker-multi-host-networking-overlays-to-the-rescue.pdf?la=en

    Docker Multihost Networking 'Hello World'
    https://www.katacoda.com/courses/docker-production/multihost-networking

    Multi-host networking with standalone swarms
    https://docs.docker.com/network/overlay-standalone.swarm/#check-external-connectivity

    Overlay networks
    https://docs.docker.com/network/overlay/

    Overlay network tutorial
    https://docs.docker.com/network/network-tutorial-overlay/


    Using the Kafka Connect Cassandra Source
    https://theagilejedi.wordpress.com/2018/01/23/using-the-kafka-connect-cassandra-source-part-1/

    Kafka Connect - standalone vs distributed
    https://docs.confluent.io/current/connect/userguide.html#standalone-vs-distributed

    The Connect API in Kafka Cassandra Sink
    https://www.confluent.io/blog/kafka-connect-cassandra-sink-the-perfect-match/


    SMACK stack (Spark, Mesos, Akka, Cassandra and Kafka)
    https://bigdata-madesimple.com/smackspark-mesos-akka-kafka/
    https://www.oreilly.com/ideas/the-smack-stack
    https://www.hpe.com/us/en/insights/articles/understanding-the-smack-stack-for-big-data-1803.html
    https://medium.com/pintail-labs/what-is-the-smack-stack-31bc85131a9a
    https://mesosphere.com/blog/smack-stack-new-lamp-stack/



    Akka Java quickstart
    https://developer.lightbend.com/guides/akka-quickstart-java/

    Alpakka
    https://doc.akka.io/docs/akka-stream-kafka/current/home.html

        The Alpakka project is an open source initiative to implement stream-aware and reactive integration
        pipelines for Java and Scala. It is built on top of Akka Streams, and has been designed from the
        ground up to understand streaming natively and provide a DSL for reactive and stream-oriented
        programming, with built-in support for backpressure. Akka Streams is a Reactive Streams and
        JDK 9+ java.util.concurrent.Flow-compliant implementation and therefore fully interoperable
        with other implementations.



    The SMACK stack â€“ hands on!
    https://blog.codecentric.de/en/2016/04/smack-stack-hands/
    https://github.com/ftrossbach/intro-to-dcos



    Libvirt provider for Vagrant
    https://github.com/vagrant-libvirt/vagrant-libvirt

    Vagrant and Libvirt with KVM or QEMU
    https://docs.cumulusnetworks.com/display/VX/Vagrant+and+Libvirt+with+KVM+or+QEMU

    Using Vagrant with Libvirt on Fedora 27
    https://blog.scottlowe.org/2017/12/06/using-vagrant-with-libvirt-on-fedora/

    Using Docker Machine with KVM and Libvirt
    https://blog.scottlowe.org/2017/11/24/using-docker-machine-kvm-libvirt/

    Using Vagrant with Libvirt on Linux
    https://computingforgeeks.com/using-vagrant-with-libvirt-on-linux/


    Open Computing Facility (OCF)
    https://www.ocf.berkeley.edu/


    OCF Mesos
    https://www.ocf.berkeley.edu/docs/staff/backend/mesos/

        "At the OCF, we use Mesos and Marathon in order to deploy a number of important services."

    OCF KVM/Libvirt
    https://www.ocf.berkeley.edu/docs/staff/backend/libvirt/

        "Most of the OCF's hosts are virtual machines. Our virtual machines
        are all powered by QEMU/KVM and managed by libvirt on the hypervisors."



