#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2017, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create a new VM to work with.
#[user@trop]

    createvm

        INFO : Node name [Etalema]
        INFO : Base name [fedora-25-docker-16G-20170713.qcow]
        INFO : Base path [/var/lib/libvirt/images/base/fedora-25-docker-16G-20170713.qcow]
        INFO : Disc name [Etalema.qcow]
        INFO : Disc size [16GiB]

# -----------------------------------------------------
# Login to the new VM.
#[user@trop]

    ssh Stevedore@Etalema

# -----------------------------------------------------
# Configure our secrets function.
#[user@virtual]

cat > "${HOME}/secret.sh" << 'EOF'
....
....
EOF

    source "${HOME}/secret.sh"
    secret frog

# -----------------------------------------------------
# Configure our OpenStack settings.
# https://horizon.ecdf.ed.ac.uk/dashboard/project/access_and_security/api_access/openrc/
#[user@virtual]

    cat > "${HOME}/openstack.settings" << EOF

export OS_INTERFACE=public
export OS_IDENTITY_API_VERSION=3

export OS_AUTH_URL=https://keystone.ecdf.ed.ac.uk/v3

export OS_USER_DOMAIN_NAME="ed"
export OS_REGION_NAME="Edinburgh"

export OS_USERNAME=$(secret openstack.user)
export OS_PASSWORD=$(secret openstack.pass)

#export OS_PROJECT_ID=c2ff1afa3e874e0eb6f5a48f7e77208b
#export OS_PROJECT_NAME=virtual-observatory-services

export OS_PROJECT_ID=fcef6dd450f64a1ab4ffa5a7234c4161
export OS_PROJECT_NAME=lsst

EOF

# -----------------------------------------------------
# Create a working container.
#[user@virtual]

    docker run \
        --rm \
        --tty \
        --interactive \
        --env SSH_AUTH_SOCK=/tmp/ssh_auth_sock \
        --volume "${HOME}/openstack.settings:/openstack.settings" \
        --volume ${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock \
        fedora \
        bash

# -----------------------------------------------------
# Load our settings.
#[root@container]

    source /openstack.settings

# -----------------------------------------------------
# Check our user name and password.
#[root@container]

    cat << EOF
Username [${OS_USERNAME:?}]
Password [${OS_PASSWORD:?}]
Project  [${OS_PROJECT_NAME:?}]
Project  [${OS_PROJECT_ID:?}]
EOF

# -----------------------------------------------------
# Install the old OpenStack clients.
# https://github.com/openstack/python-novaclient
# https://docs.openstack.org/python-novaclient/latest/
# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux_OpenStack_Platform/4/html/End_User_Guide/install_clients.html
#[root@container]

#   dnf \
#       install -y \
#       python-novaclient \
#       python-glanceclient \
#       python-cinderclient \
#       python-neutronclient

# -----------------------------------------------------
# Install the OpenStack client.
# https://docs.openstack.org/python-openstackclient/latest/
#[root@container]

    dnf \
        install -y \
        python-openstackclient

# -----------------------------------------------------
# Install the jq JSON parser.
# https://stedolan.github.io/jq/
#[root@container]

    dnf \
        install -y \
        jq

# -----------------------------------------------------
# Show our project details.
#[root@container]

    openstack \
        project \
        show \
        --format json \
        ${OS_PROJECT_ID:?} \
        | jq '.' \
        | tee /tmp/project-info.json

    {
      "is_domain": false,
      "description": "",
      "enabled": true,
      "domain_id": "450db9c9d59f4e888f9f44c4a9904118",
      "parent_id": "450db9c9d59f4e888f9f44c4a9904118",
      "id": "fcef6dd450f64a1ab4ffa5a7234c4161",
      "name": "lsst"
    }

# -----------------------------------------------------
# List our project volumes.
#[root@container]

    openstack \
        volume \
        list \
        --format json \
        | jq '.' \
        | tee /tmp/project-list.json

    []

# -----------------------------------------------------
# List our project snapshots.
#[root@container]

    openstack \
        snapshot \
        list \
        --format json \
        | jq '.' \
        | tee /tmp/snapshot-list.json

    []

# -----------------------------------------------------
# Display our project limits.
#[root@container]

    openstack \
        limits \
        show \
        --absolute \
        --format json \
        | jq '.' \
        | tee /tmp/project-limits.json

    [
      {
        "Name": "maxServerMeta",
        "Value": 128
      },
      {
        "Name": "maxTotalInstances",
        "Value": 20
      },
      {
        "Name": "maxPersonality",
        "Value": 5
      },
      {
        "Name": "totalServerGroupsUsed",
        "Value": 0
      },
      {
        "Name": "maxImageMeta",
        "Value": 128
      },
      {
        "Name": "maxPersonalitySize",
        "Value": 10240
      },
      {
        "Name": "maxTotalRAMSize",
        "Value": 81920
      },
      {
        "Name": "maxServerGroups",
        "Value": 10
      },
      {
        "Name": "maxSecurityGroupRules",
        "Value": 100
      },
      {
        "Name": "maxTotalKeypairs",
        "Value": 100
      },
      {
        "Name": "totalCoresUsed",
        "Value": 0
      },
      {
        "Name": "totalRAMUsed",
        "Value": 0
      },
      {
        "Name": "maxSecurityGroups",
        "Value": 100
      },
      {
        "Name": "totalFloatingIpsUsed",
        "Value": 0
      },
      {
        "Name": "totalInstancesUsed",
        "Value": 0
      },
      {
        "Name": "maxServerGroupMembers",
        "Value": 10
      },
      {
        "Name": "maxTotalFloatingIps",
        "Value": 100
      },
      {
        "Name": "totalSecurityGroupsUsed",
        "Value": 1
      },
      {
        "Name": "maxTotalCores",
        "Value": 40
      },
      {
        "Name": "totalSnapshotsUsed",
        "Value": 0
      },
      {
        "Name": "maxTotalBackups",
        "Value": 10
      },
      {
        "Name": "maxTotalVolumeGigabytes",
        "Value": 6148
      },
      {
        "Name": "maxTotalSnapshots",
        "Value": 10
      },
      {
        "Name": "maxTotalBackupGigabytes",
        "Value": 1000
      },
      {
        "Name": "totalBackupGigabytesUsed",
        "Value": 0
      },
      {
        "Name": "maxTotalVolumes",
        "Value": 30
      },
      {
        "Name": "totalVolumesUsed",
        "Value": 0
      },
      {
        "Name": "totalBackupsUsed",
        "Value": 0
      },
      {
        "Name": "totalGigabytesUsed",
        "Value": 0
      }
    ]

# -----------------------------------------------------
# List the available flavors.
#[root@container]

    openstack \
        flavor \
        list \
        --format json \
        | jq '.' \
        | tee /tmp/flavor-list.json

    [
      {
        "Name": "m1.xxlarge",
        "RAM": 32768,
        "Ephemeral": 0,
        "VCPUs": 16,
        "Is Public": true,
        "Disk": 160,
        "ID": "09086afb-9d80-4719-974c-45e700a795bb"
      },
      {
        "Name": "m1.small",
        "RAM": 2048,
        "Ephemeral": 0,
        "VCPUs": 1,
        "Is Public": true,
        "Disk": 20,
        "ID": "2"
      },
      {
        "Name": "l1.xxlarge",
        "RAM": 98304,
        "Ephemeral": 0,
        "VCPUs": 16,
        "Is Public": true,
        "Disk": 320,
        "ID": "2b93be09-8179-4db2-9f27-e98dd0c8fbaf"
      },
      {
        "Name": "m1.medium",
        "RAM": 4096,
        "Ephemeral": 0,
        "VCPUs": 2,
        "Is Public": true,
        "Disk": 40,
        "ID": "3"
      },
      {
        "Name": "m1.large",
        "RAM": 8192,
        "Ephemeral": 0,
        "VCPUs": 4,
        "Is Public": true,
        "Disk": 80,
        "ID": "4"
      },
      {
        "Name": "m1.xlarge",
        "RAM": 16384,
        "Ephemeral": 0,
        "VCPUs": 8,
        "Is Public": true,
        "Disk": 160,
        "ID": "5"
      },
      {
        "Name": "l1.small",
        "RAM": 6144,
        "Ephemeral": 0,
        "VCPUs": 1,
        "Is Public": true,
        "Disk": 40,
        "ID": "6"
      },
      {
        "Name": "l1.medium",
        "RAM": 12288,
        "Ephemeral": 0,
        "VCPUs": 2,
        "Is Public": true,
        "Disk": 80,
        "ID": "7"
      },
      {
        "Name": "l1.large",
        "RAM": 24576,
        "Ephemeral": 0,
        "VCPUs": 4,
        "Is Public": true,
        "Disk": 160,
        "ID": "8"
      },
      {
        "Name": "l1.xlarge",
        "RAM": 49152,
        "Ephemeral": 0,
        "VCPUs": 8,
        "Is Public": true,
        "Disk": 320,
        "ID": "9"
      }
    ]

# -----------------------------------------------------
# List our available networks.
#[root@container]

    openstack \
        network \
        list \
        --format json \
        | jq '.' \
        | tee /tmp/network-list.json

    [
      {
        "Subnets": "378f0f3f-a7bc-495d-9b21-3997a10404e8",
        "ID": "0dc77e8e-a97e-411e-94d0-da1b6efc393c",
        "Name": "vm-network-UoE-external"
      },
      {
        "Subnets": "6ab469f9-ff01-4aee-af59-5f1da7e26e81",
        "ID": "4f2774d1-dfb8-4833-8374-806e1fc40827",
        "Name": "Floating Network Private (UoE access only)"
      },
      {
        "Subnets": "9c07390c-dc6e-4a85-a20c-66c370dbff62",
        "ID": "cc1bdad0-6b7c-4c7b-8c5b-6d5f4a677368",
        "Name": "vm-network-UoE-internal"
      },
      {
        "Subnets": "e1c72964-3276-473f-a169-b60de622c385",
        "ID": "d1e55e07-6f28-4d98-8116-e11ca10c3e8f",
        "Name": "Floating Network Public"
      }
    ]

# -----------------------------------------------------
# List the available images.
#[root@container]

    openstack \
        image \
        list \
        --format json \
        | jq '.' \
        | tee /tmp/image-list.json

    [
      {
        "Status": "active",
        "ID": "78f2f6e8-70c3-440e-bbf3-8ed639808706",
        "Name": "fedora-25-docker-16G-20170713"
      },
      {
        "Status": "active",
        "ID": "d608b269-de15-4852-96b0-2dda15466cb6",
        "Name": "Centos 6 - 1612"
      },
      {
        "Status": "active",
        "ID": "b241c7ea-63f5-4a77-86de-e18a1e8bee45",
        "Name": "Centos 7 - 1612"
      },
      {
        "Status": "active",
        "ID": "2326063c-5a0f-4430-b76c-e977100a3e0d",
        "Name": "Scientific Linux 7.2"
      },
      {
        "Status": "active",
        "ID": "b3bb4c27-ec69-4115-a02e-dfe9e8e65acb",
        "Name": "Ubuntu 14.04 Spark 1.3.1"
      },
      {
        "Status": "active",
        "ID": "21649978-8542-4b5b-88c0-d1cde75b8516",
        "Name": "Ubuntu 14.04 Vanilla 2.7.1"
      },
      {
        "Status": "active",
        "ID": "039046a1-0a88-4a5b-b997-b18fa2264e0b",
        "Name": "Ubuntu 14.04"
      },
      {
        "Status": "active",
        "ID": "65a5d008-5d58-48f9-973a-1fd1e917ba7d",
        "Name": "Scientific Linux 6.8"
      },
      {
        "Status": "active",
        "ID": "909b980e-3514-4589-a250-444e0dcbad04",
        "Name": "Ubuntu 16.04"
      }
    ]

# -----------------------------------------------------
# Get our flavor identifier.
#[root@container]

    match='^m1.large'

    flavorident=$(
        jq -r "
            [
            .[] |
            if (.Name | test(\"${match:?}\"))
            then
                .
            else
                empty
            end
            ] |
            .[0].ID
            " /tmp/flavor-list.json
            )

# -----------------------------------------------------
# Get our network identifier.
#[root@container]

    match='^vm-network-UoE-external'

    vmexternnet=$(
        jq -r "
            [
            .[] |
            if (.Name | test(\"${match:?}\"))
            then
                .
            else
                empty
            end
            ] |
            .[0].ID
            " /tmp/network-list.json
            )

# -----------------------------------------------------
# Get our image identifier.
#[root@container]

    match='^fedora-25-docker'

    imageident=$(
        jq -r "
            [
            .[] |
            if (.Name | test(\"${match:?}\"))
            then
                .
            else
                empty
            end
            ] |
            .[0].ID
            " /tmp/image-list.json
            )

# -----------------------------------------------------
# Boot an instance.
#[root@container]

    vmname=albert

    openstack \
        server \
        create \
        --format json \
        --image "${imageident:?}" \
        --flavor "${flavorident:?}" \
        --nic "net-id=${vmexternnet:?}" \
        "${vmname:?}" \
        | jq '.' \
        | tee /tmp/vm-info.json

    {
      "OS-EXT-STS:task_state": "scheduling",
      "addresses": "",
      "image": "fedora-25-docker-16G-20170713 (78f2f6e8-70c3-440e-bbf3-8ed639808706)",
      "OS-EXT-STS:vm_state": "building",
      "OS-SRV-USG:launched_at": null,
      "flavor": "m1.large (4)",
      "id": "d68e61a5-97d4-4b5a-b094-8c9e1a3e40b7",
      "security_groups": [
        {
          "name": "default"
        }
      ],
      "user_id": "3d241b5fa2d0b3378901e08e86e10284dc9f9dae3732b99f71f809cf46ccb0d5",
      "OS-DCF:diskConfig": "MANUAL",
      "accessIPv4": "",
      "accessIPv6": "",
      "progress": 0,
      "OS-EXT-STS:power_state": "NOSTATE",
      "project_id": "fcef6dd450f64a1ab4ffa5a7234c4161",
      "config_drive": "",
      "status": "BUILD",
      "updated": "2017-11-13T17:35:24Z",
      "hostId": "",
      "OS-SRV-USG:terminated_at": null,
      "key_name": null,
      "properties": "",
      "OS-EXT-AZ:availability_zone": "",
      "name": "albert",
      "adminPass": "XghVTY3RQA5v",
      "created": "2017-11-13T17:35:24Z",
      "os-extended-volumes:volumes_attached": []
    }

# -----------------------------------------------------
# Get our instance identifier.
#[root@container]

    vmident=$(
        jq -r "
            .id
            " /tmp/vm-info.json
            )

# -----------------------------------------------------
# Get details for our new instance.
#[root@container]

    openstack \
        server \
        show \
        --format json \
        "${vmident:?}" \
        | jq '.' \
        | tee /tmp/vm-info.json

    {
      "OS-EXT-STS:task_state": null,
      "addresses": "vm-network-UoE-external=192.168.2.9",
      "image": "fedora-25-docker-16G-20170713 (78f2f6e8-70c3-440e-bbf3-8ed639808706)",
      "OS-EXT-STS:vm_state": "active",
      "OS-SRV-USG:launched_at": "2017-11-13T17:35:44.000000",
      "flavor": "m1.large (4)",
      "id": "d68e61a5-97d4-4b5a-b094-8c9e1a3e40b7",
      "security_groups": [
        {
          "name": "default"
        }
      ],
      "user_id": "3d241b5fa2d0b3378901e08e86e10284dc9f9dae3732b99f71f809cf46ccb0d5",
      "OS-DCF:diskConfig": "MANUAL",
      "accessIPv4": "",
      "accessIPv6": "",
      "progress": 0,
      "OS-EXT-STS:power_state": "Running",
      "project_id": "fcef6dd450f64a1ab4ffa5a7234c4161",
      "config_drive": "True",
      "status": "ACTIVE",
      "updated": "2017-11-13T17:35:46Z",
      "hostId": "113dbf351a1892a120509db787d0690e8c825a1210d14c3b88d7dfc7",
      "OS-SRV-USG:terminated_at": null,
      "key_name": null,
      "properties": "",
      "OS-EXT-AZ:availability_zone": "nova",
      "name": "albert",
      "created": "2017-11-13T17:35:24Z",
      "os-extended-volumes:volumes_attached": []
    }

# -----------------------------------------------------
# Get the public network identifier.
#[root@container]

    match='^Floating Network Public'

    floatexternnet=$(
        jq -r "
            [
            .[] |
            if (.Name | test(\"${match:?}\"))
            then
                .
            else
                empty
            end
            ] |
            .[0].ID
            " /tmp/network-list.json
            )

# -----------------------------------------------------
# Create a public floating IP address.
#[root@container]

    openstack \
        floating ip \
        create \
        --format json \
        "${floatexternnet:?}" \
        | jq '.' \
        | tee /tmp/float-info.json

    {
      "router_id": null,
      "status": "DOWN",
      "description": "",
      "created_at": "2017-11-13T17:55:05Z",
      "updated_at": "2017-11-13T17:55:05Z",
      "floating_network_id": "d1e55e07-6f28-4d98-8116-e11ca10c3e8f",
      "headers": "",
      "fixed_ip_address": null,
      "floating_ip_address": "129.215.193.78",
      "revision_number": 1,
      "project_id": "fcef6dd450f64a1ab4ffa5a7234c4161",
      "port_id": null,
      "id": "89eb408d-909e-4867-8644-8de46d8ea377"
    }

# -----------------------------------------------------
# Get our floating IP address ident.
#[root@container]

    floatident=$(
        jq -r "
            .id
            " /tmp/float-info.json
            )

# -----------------------------------------------------
# Get our public IPv4 address.
#[root@container]

    floatipv4=$(
        jq -r "
            .floating_ip_address
            " /tmp/float-info.json
            )

# -----------------------------------------------------
# Add our IP address to our instance.
#[root@container]

    openstack \
        server \
        add \
        floating ip \
        "${vmident:?}" \
        "${floatipv4:?}"

# -----------------------------------------------------
# Check our floating IP address.
#[root@container]

    openstack \
        floating ip \
        show \
        --format json \
        "${floatipv4:?}" \
        | jq '.' \
        | tee /tmp/float-info.json

    {
      "router_id": "1ecb1ce0-5a04-4d2d-b1ab-5c45a2b6e448",
      "status": "ACTIVE",
      "description": "",
      "created_at": "2017-11-13T17:55:05Z",
      "updated_at": "2017-11-13T18:04:21Z",
      "floating_network_id": "d1e55e07-6f28-4d98-8116-e11ca10c3e8f",
      "fixed_ip_address": "192.168.2.9",
      "floating_ip_address": "129.215.193.78",
      "revision_number": 2,
      "project_id": "fcef6dd450f64a1ab4ffa5a7234c4161",
      "port_id": "ad95b6fc-3642-4f2b-b6c7-2a5fcc817d4a",
      "id": "89eb408d-909e-4867-8644-8de46d8ea377"
    }

# -----------------------------------------------------
# Install the ssh client.
#[root@container]

    dnf \
        install -y \
        openssh-clients

# -----------------------------------------------------
# Test the floating IP address.
#[root@container]

    ssh Stevedore@"${floatipv4:?}"

# -----------------------------------------------------
# Check the network config.
#[user@virtual]

    ifconfig

        docker0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
            inet 172.17.0.1  netmask 255.255.0.0  broadcast 0.0.0.0
            ether 02:42:11:1f:57:68  txqueuelen 0  (Ethernet)
            RX packets 0  bytes 0 (0.0 B)
            RX errors 0  dropped 0  overruns 0  frame 0
            TX packets 0  bytes 0 (0.0 B)
            TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

        ens3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1450
            inet 192.168.2.9  netmask 255.255.255.0  broadcast 192.168.2.255
            inet6 fe80::f816:3eff:febe:c546  prefixlen 64  scopeid 0x20<link>
            ether fa:16:3e:be:c5:46  txqueuelen 1000  (Ethernet)
            RX packets 18071  bytes 26183879 (24.9 MiB)
            RX errors 0  dropped 0  overruns 0  frame 0
            TX packets 1505  bytes 111822 (109.2 KiB)
            TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

        lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
            inet 127.0.0.1  netmask 255.0.0.0
            inet6 ::1  prefixlen 128  scopeid 0x10<host>
            loop  txqueuelen 1000  (Local Loopback)
            RX packets 0  bytes 0 (0.0 B)
            RX errors 0  dropped 0  overruns 0  frame 0
            TX packets 0  bytes 0 (0.0 B)
            TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

# -----------------------------------------------------
# Check external access.
#[user@virtual]

    curl -s http://icanhazip.com/

        129.215.193.78

# -----------------------------------------------------
# Exit from our vm instance.
#[user@virtual]

    exit

# -----------------------------------------------------
# Delete our instance.
#[root@container]

    openstack \
        server \
        delete \
        "${vmident:?}"

# -----------------------------------------------------
# Delete our floating IP address.
#[root@container]

    openstack \
        floating ip \
        delete \
        "${floatipv4:?}"

# -----------------------------------------------------
# Exit from our working container.
#[root@container]

    exit

# -----------------------------------------------------
# Exit from our working VM.
#[user@virtual]

    exit




