#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2019, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    Hello world.

    Docker multi-host network .. later.
    Single set of containers wthin one physical host for now.

    Vagrant/libvirt on trop .. later.
    Use the existing createvm for now.

    Meso on trop .. later.
    Use static allocation for now.

    Docker 'official' image (maintained by Docker not Cassandra).
    https://github.com/docker-library/cassandra

    See if we can use any of this example ...
    https://blog.codecentric.de/en/2016/04/smack-stack-hands/

    Lots of blogs using Kafka Connect.

    Kafka --> KafkaConnect(sink) --> Cassandra

    1) trop03 instance of Kafka.
    2) Standalone instance of KafkaConnect.
    3) Local instance of Cassandra.

    Use KafkaConnect without Confluent Schema Registry
    https://stackoverflow.com/questions/52333230/use-kafkaconnect-without-confluent-schema-registry
    https://stackoverflow.com/a/52342547
    https://github.com/farmdawgnation/registryless-avro-converter

        key.converter=me.frmr.kafka.connect.RegistrylessAvroConverter
        key.converter.schema.path=/path/to/schema/file.avsc
        value.converter=me.frmr.kafka.connect.RegistrylessAvroConverter
        value.converter.schema.path=/path/to/schema/file.avsc


